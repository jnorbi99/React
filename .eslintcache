[{"C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\reportWebVitals.js":"1","C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\App.js":"2","C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\index.js":"3","C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\components\\MenuComponent.js":"4","C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\shared\\dishes.js":"5","C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\components\\DishdetailComponent.js":"6","C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\components\\MainComponent.js":"7","C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\components\\FooterComponent.js":"8","C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\components\\HeaderComponent.js":"9","C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\components\\ContactComponent.js":"10","C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\shared\\comments.js":"11","C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\components\\HomeComponent.js":"12","C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\shared\\promotions.js":"13","C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\components\\AboutComponent.js":"14","C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\shared\\leaders.js":"15","C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\redux\\comments.js":"16","C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\redux\\ActionCreators.js":"17","C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\redux\\leaders.js":"18","C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\redux\\dishes.js":"19","C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\redux\\configureStore.js":"20","C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\redux\\forms.js":"21","C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\components\\LoadingComponent.js":"22","C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\shared\\baseUrl.js":"23","C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\redux\\promotions.js":"24","C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\redux\\ActionTypes.js":"25"},{"size":362,"mtime":1610137035618,"results":"26","hashOfConfig":"27"},{"size":561,"mtime":1611356569498,"results":"28","hashOfConfig":"27"},{"size":643,"mtime":1610627294454,"results":"29","hashOfConfig":"27"},{"size":2295,"mtime":1611575635917,"results":"30","hashOfConfig":"27"},{"size":1490,"mtime":1610707772332,"results":"31","hashOfConfig":"27"},{"size":9300,"mtime":1611750004074,"results":"32","hashOfConfig":"27"},{"size":4295,"mtime":1611750131342,"results":"33","hashOfConfig":"27"},{"size":2837,"mtime":1610709199238,"results":"34","hashOfConfig":"27"},{"size":5408,"mtime":1611312380222,"results":"35","hashOfConfig":"27"},{"size":10893,"mtime":1611750087448,"results":"36","hashOfConfig":"27"},{"size":4280,"mtime":1610707895014,"results":"37","hashOfConfig":"27"},{"size":1894,"mtime":1611585081553,"results":"38","hashOfConfig":"27"},{"size":445,"mtime":1610707903395,"results":"39","hashOfConfig":"27"},{"size":5512,"mtime":1611749964993,"results":"40","hashOfConfig":"27"},{"size":2382,"mtime":1610707910856,"results":"41","hashOfConfig":"27"},{"size":639,"mtime":1611580262180,"results":"42","hashOfConfig":"27"},{"size":6369,"mtime":1611689780168,"results":"43","hashOfConfig":"27"},{"size":674,"mtime":1611583080012,"results":"44","hashOfConfig":"27"},{"size":596,"mtime":1611515988972,"results":"45","hashOfConfig":"27"},{"size":799,"mtime":1611517937184,"results":"46","hashOfConfig":"27"},{"size":169,"mtime":1611517813524,"results":"47","hashOfConfig":"27"},{"size":254,"mtime":1611516624639,"results":"48","hashOfConfig":"27"},{"size":48,"mtime":1611574523145,"results":"49","hashOfConfig":"27"},{"size":683,"mtime":1611575209512,"results":"50","hashOfConfig":"27"},{"size":656,"mtime":1611689681323,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"9liczo",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\reportWebVitals.js",[],["110","111"],"C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\App.js",[],["112","113"],"C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\index.js",[],["114","115"],"C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\components\\MenuComponent.js",[],"C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\shared\\dishes.js",[],["116","117"],"C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\components\\DishdetailComponent.js",["118","119","120"],"import React, { Component } from \"react\";\r\nimport { CardText, Card, CardBody, CardTitle, CardImg, BreadcrumbItem, Breadcrumb, Button, Modal, ModalHeader, ModalBody, Label, Row, Col} from \"reactstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl'; \r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n    const maxLength = (len) => (val) => !(val) || (val.length <= len);\r\n    const minLength = (len) => (val) => val && (val.length >= len);\r\n\r\n    class CommentForm extends Component {\r\n\r\n        constructor(props) {\r\n            super(props);\r\n    \r\n            this.state = {\r\n                isNavOpen: false,\r\n                isModalOpen: false\r\n            };\r\n    \r\n            this.toggleModal = this.toggleModal.bind(this);\r\n            this.handleSubmit = this.handleSubmit.bind(this);\r\n        }\r\n\r\n        toggleModal() {\r\n            this.setState({\r\n                isModalOpen: !this.state.isModalOpen\r\n            });\r\n        }\r\n\r\n        handleSubmit(values) {\r\n            this.toggleModal();\r\n            this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n        }\r\n\r\n        render() {\r\n            return(\r\n                <div>\r\n                    <Button outline onClick={this.toggleModal}>\r\n                        <span className=\"fa fa-pencil fa-lg\">Submit Comment</span>\r\n                    </Button>\r\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                        <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                        <ModalBody>\r\n                            <LocalForm onSubmit={this.handleSubmit}>\r\n                                <Row >\r\n                                    <Col>\r\n                                        <Label htmlFor=\"rating\">Rating</Label>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col >\r\n                                        <Control.select model=\".contactType\" name=\"contactType\"\r\n                                            className=\"form-control\">\r\n                                            <option>1</option>\r\n                                            <option>2</option>\r\n                                            <option>3</option>\r\n                                            <option>4</option>\r\n                                            <option>5</option>\r\n                                        </Control.select>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Label htmlFor=\"author\">Your Name</Label>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Your Name\" \r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                minLength: minLength(3), maxLength: maxLength(15)\r\n                                            }}\r\n                                        />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".author\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 characters or less'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Label htmlFor=\"comment\">Comment</Label>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <div></div>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Button type=\"submit\" value=\"submit\" className=\"bg-primary\">Submit</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </LocalForm>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    function RenderDish({dish}) {\r\n        \r\n        if(dish != null) {\r\n            return(\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <FadeTransform in \r\n                        transformProps={{exitTransform: 'scale(0.5) translateY(-50%)'}} >\r\n                        <Card>\r\n                            <CardImg top src={baseUrl + dish.image} alt={dish.name}/>\r\n                            <CardBody>\r\n                                <CardTitle heading>{dish.name}</CardTitle>\r\n                                <CardText>{dish.description}</CardText>\r\n                            </CardBody>                          \r\n                        </Card>\r\n                    </FadeTransform>\r\n                </div>\r\n            );\r\n        } else {\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    function RenderComments({comments, postComment, dishId}) {\r\n        if(comments != null) {\r\n            return(\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <h4>Comments</h4>\r\n                    <ul className=\"list-unstyled\">\r\n                        <Stagger in>\r\n                            {comments.map((comment) => {\r\n                                return(\r\n                                    <Fade in>\r\n                                        <li key={comment.id}>\r\n                                            <p>{comment.comment}</p>\r\n                                            <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                                        </li>\r\n                                    </Fade>\r\n                                );\r\n                            })}\r\n                        </Stagger>\r\n                    </ul>\r\n                    <CommentForm dishId={dishId} postComment={postComment} />\r\n                </div>\r\n            );\r\n        } else {\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const DishDetail = (props) => {\r\n\r\n        if(props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else if(props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else if(props.selectedDish != null) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.selectedDish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{props.selectedDish.name}</h3>\r\n                            <hr/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                            <RenderDish dish={props.selectedDish}/>\r\n                            <RenderComments comments={props.comments}\r\n                                postComment={props.postComment}\r\n                                dishId={props.selectedDish.id} />\r\n                    </div>\r\n                </div>\r\n                   \r\n            );\r\n            \r\n        } else {\r\n            return(\r\n                <div></div>\r\n            );\r\n        }       \r\n        \r\n    }\r\n\r\n\r\nexport default DishDetail;","C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\components\\MainComponent.js",[],"C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\components\\FooterComponent.js",[],"C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\components\\HeaderComponent.js",[],"C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\components\\ContactComponent.js",["121","122","123","124","125","126","127","128"],"import React, {Component} from 'react';\r\nimport { Breadcrumb , BreadcrumbItem, Button, Label, Col, Row,} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.postFeedback(values);\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                         <h3>Contact Us</h3>\r\n                         <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:jnorbert1999@gmail.com\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\shared\\comments.js",[],["129","130"],"C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\components\\HomeComponent.js",[],"C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\shared\\promotions.js",[],"C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\components\\AboutComponent.js",[],"C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\shared\\leaders.js",[],["131","132"],"C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\redux\\comments.js",[],"C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\redux\\ActionCreators.js",[],"C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\redux\\leaders.js",[],"C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\redux\\dishes.js",[],"C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\redux\\configureStore.js",[],"C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\redux\\forms.js",[],"C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\components\\LoadingComponent.js",[],"C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\shared\\baseUrl.js",[],"C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\redux\\promotions.js",[],"C:\\Users\\jnorb\\Desktop\\React\\React\\confusion\\src\\redux\\ActionTypes.js",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"133","replacedBy":"137"},{"ruleId":"135","replacedBy":"138"},{"ruleId":"133","replacedBy":"139"},{"ruleId":"135","replacedBy":"140"},{"ruleId":"133","replacedBy":"141"},{"ruleId":"135","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":54,"column":41,"nodeType":"145","endLine":55,"endColumn":70},{"ruleId":"143","severity":1,"message":"146","line":71,"column":41,"nodeType":"145","endLine":76,"endColumn":43},{"ruleId":"143","severity":1,"message":"147","line":95,"column":37,"nodeType":"145","endLine":97,"endColumn":68},{"ruleId":"148","severity":1,"message":"149","line":60,"column":29,"nodeType":"145","endLine":60,"endColumn":71},{"ruleId":"143","severity":1,"message":"146","line":74,"column":37,"nodeType":"145","endLine":80,"endColumn":44},{"ruleId":"143","severity":1,"message":"146","line":96,"column":37,"nodeType":"145","endLine":102,"endColumn":44},{"ruleId":"143","severity":1,"message":"146","line":118,"column":37,"nodeType":"145","endLine":124,"endColumn":44},{"ruleId":"143","severity":1,"message":"146","line":141,"column":37,"nodeType":"145","endLine":147,"endColumn":44},{"ruleId":"143","severity":1,"message":"150","line":163,"column":45,"nodeType":"145","endLine":165,"endColumn":52},{"ruleId":"143","severity":1,"message":"144","line":171,"column":37,"nodeType":"145","endLine":172,"endColumn":66},{"ruleId":"143","severity":1,"message":"147","line":181,"column":37,"nodeType":"145","endLine":183,"endColumn":68},{"ruleId":"133","replacedBy":"151"},{"ruleId":"135","replacedBy":"152"},{"ruleId":"133","replacedBy":"153"},{"ruleId":"135","replacedBy":"154"},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],["155"],["156"],["155"],["156"],["155"],["156"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["155"],["156"],["155"],["156"],"no-global-assign","no-unsafe-negation"]